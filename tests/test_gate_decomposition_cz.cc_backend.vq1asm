# Program: 'test_gate_decomposition_cz'
# CC_BACKEND_VERSION 0.4.0
# OPENQL_VERSION 0.11.1
# Note:    generated by OpenQL Central Controller backend
#
.CODE                           
# synchronous start and latency compensation
                seq_bar                                             # synchronization, delay set externally through SET_SEQ_BAR_CNT
                seq_out         0x00000000,1                        # allows monitoring actual start time using trace unit
# start of main loop that runs indefinitely
__mainLoop:                                                         # 
                seq_state       0                                   # clear Programmable Logic state
                
### Block: 'kernel_0'
## Bundle 0: start_cycle=0:
 # gate '_cz_sw_ne_park <Z:qubit> q[8], <Z:qubit> q[10], <I:qubit> q[11]'
  # slot=3, instrument='flux_0', group=0': signalValue='{type:cz,which:SW}'
  # slot=3, instrument='flux_0', group=2': signalValue='{type:idle_z,which:NE}'
  # slot=3, instrument='flux_0', group=3': signalValue='{type:park}'
  # slot=3, instrument='flux_0', group=0: codeword=3 (static override): groupDigOut=0x00000003
  # slot=3, instrument='flux_0', group=2: codeword=1 (static override): groupDigOut=0x00000040
  # slot=3, instrument='flux_0', group=3: codeword=5 (static override): groupDigOut=0x00000a00
  # slot=3, instrument='flux_0': lastEndCycle=0, startCycle=0, instrMaxDurationInCycles=2
[3]             seq_out         0x80008a43,2                        # cycle 0-2: code word/mask on 'flux_0'
                
## Bundle 1: start_cycle=2:
 # gate '_cz_sw_ne_park <Z:qubit> q[8], <Z:qubit> q[10], <I:qubit> q[11]'
  # slot=3, instrument='flux_0', group=0': signalValue='{type:cz,which:SW}'
  # slot=3, instrument='flux_0', group=2': signalValue='{type:idle_z,which:NE}'
  # slot=3, instrument='flux_0', group=3': signalValue='{type:park}'
  # slot=3, instrument='flux_0', group=0: codeword=3 (static override): groupDigOut=0x00000003
  # slot=3, instrument='flux_0', group=2: codeword=1 (static override): groupDigOut=0x00000040
  # slot=3, instrument='flux_0', group=3: codeword=5 (static override): groupDigOut=0x00000a00
  # slot=3, instrument='flux_0': lastEndCycle=2, startCycle=2, instrMaxDurationInCycles=2
[3]             seq_out         0x80008a43,2                        # cycle 2-4: code word/mask on 'flux_0'
                
## Bundle 2: start_cycle=4:
 # gate '_cz_se_nw_park <Z:qubit> q[8], <Z:qubit> q[11], <I:qubit> q[10]'
  # slot=3, instrument='flux_0', group=0': signalValue='{type:cz,which:SE}'
  # slot=3, instrument='flux_0', group=3': signalValue='{type:idle_z,which:NW}'
  # slot=3, instrument='flux_0', group=2': signalValue='{type:park}'
  # slot=3, instrument='flux_0', group=0: codeword=2 (static override): groupDigOut=0x00000002
  # slot=3, instrument='flux_0', group=2: codeword=5 (static override): groupDigOut=0x00000140
  # slot=3, instrument='flux_0', group=3: codeword=4 (static override): groupDigOut=0x00000800
  # slot=3, instrument='flux_0': lastEndCycle=4, startCycle=4, instrMaxDurationInCycles=2
[3]             seq_out         0x80008942,2                        # cycle 4-6: code word/mask on 'flux_0'
                
## Bundle 3: start_cycle=6:
 # gate '_cz_sw_ne_park <Z:qubit> q[9], <Z:qubit> q[11], <I:qubit> q[12]'
  # slot=3, instrument='flux_0', group=1': signalValue='{type:cz,which:SW}'
  # slot=3, instrument='flux_0', group=3': signalValue='{type:idle_z,which:NE}'
  # slot=3, instrument='flux_0', group=4': signalValue='{type:park}'
  # slot=3, instrument='flux_0', group=1: codeword=3 (static override): groupDigOut=0x00000018
  # slot=3, instrument='flux_0', group=3: codeword=1 (static override): groupDigOut=0x00000200
  # slot=3, instrument='flux_0', group=4: codeword=5 (static override): groupDigOut=0x00050000
  # slot=3, instrument='flux_0': lastEndCycle=6, startCycle=6, instrMaxDurationInCycles=2
[3]             seq_out         0x80058218,2                        # cycle 6-8: code word/mask on 'flux_0'
                
## Bundle 4: start_cycle=8:
 # gate '_cz_sw_ne_park <Z:qubit> q[11], <Z:qubit> q[14], <I:qubit> q[15]'
  # slot=3, instrument='flux_0', group=3': signalValue='{type:cz,which:SW}'
  # slot=3, instrument='flux_0', group=6': signalValue='{type:idle_z,which:NE}'
  # slot=3, instrument='flux_0', group=7': signalValue='{type:park}'
  # slot=3, instrument='flux_0', group=3: codeword=3 (static override): groupDigOut=0x00000600
  # slot=3, instrument='flux_0', group=6: codeword=1 (static override): groupDigOut=0x00400000
  # slot=3, instrument='flux_0', group=7: codeword=5 (static override): groupDigOut=0x0a000000
  # slot=3, instrument='flux_0': lastEndCycle=8, startCycle=8, instrMaxDurationInCycles=2
[3]             seq_out         0x8a408600,2                        # cycle 8-10: code word/mask on 'flux_0'
                
## Bundle 5: start_cycle=10:
 # gate '_cz_sw_ne_park <Z:qubit> q[11], <Z:qubit> q[14], <I:qubit> q[15]'
  # slot=3, instrument='flux_0', group=3': signalValue='{type:cz,which:SW}'
  # slot=3, instrument='flux_0', group=6': signalValue='{type:idle_z,which:NE}'
  # slot=3, instrument='flux_0', group=7': signalValue='{type:park}'
  # slot=3, instrument='flux_0', group=3: codeword=3 (static override): groupDigOut=0x00000600
  # slot=3, instrument='flux_0', group=6: codeword=1 (static override): groupDigOut=0x00400000
  # slot=3, instrument='flux_0', group=7: codeword=5 (static override): groupDigOut=0x0a000000
  # slot=3, instrument='flux_0': lastEndCycle=10, startCycle=10, instrMaxDurationInCycles=2
[3]             seq_out         0x8a408600,2                        # cycle 10-12: code word/mask on 'flux_0'
                
## Bundle 6: start_cycle=12:
 # gate '_cz_sw_ne_park <Z:qubit> q[9], <Z:qubit> q[11], <I:qubit> q[12]'
  # slot=3, instrument='flux_0', group=1': signalValue='{type:cz,which:SW}'
  # slot=3, instrument='flux_0', group=3': signalValue='{type:idle_z,which:NE}'
  # slot=3, instrument='flux_0', group=4': signalValue='{type:park}'
  # slot=3, instrument='flux_0', group=1: codeword=3 (static override): groupDigOut=0x00000018
  # slot=3, instrument='flux_0', group=3: codeword=1 (static override): groupDigOut=0x00000200
  # slot=3, instrument='flux_0', group=4: codeword=5 (static override): groupDigOut=0x00050000
  # slot=3, instrument='flux_0': lastEndCycle=12, startCycle=12, instrMaxDurationInCycles=2
[3]             seq_out         0x80058218,2                        # cycle 12-14: code word/mask on 'flux_0'
                
## Bundle 7: start_cycle=14:
 # gate '_cz_sw_ne_park <Z:qubit> q[9], <Z:qubit> q[11], <I:qubit> q[12]'
  # slot=3, instrument='flux_0', group=1': signalValue='{type:cz,which:SW}'
  # slot=3, instrument='flux_0', group=3': signalValue='{type:idle_z,which:NE}'
  # slot=3, instrument='flux_0', group=4': signalValue='{type:park}'
  # slot=3, instrument='flux_0', group=1: codeword=3 (static override): groupDigOut=0x00000018
  # slot=3, instrument='flux_0', group=3: codeword=1 (static override): groupDigOut=0x00000200
  # slot=3, instrument='flux_0', group=4: codeword=5 (static override): groupDigOut=0x00050000
  # slot=3, instrument='flux_0': lastEndCycle=14, startCycle=14, instrMaxDurationInCycles=2
[3]             seq_out         0x80058218,2                        # cycle 14-16: code word/mask on 'flux_0'
                
## Bundle 8: start_cycle=16:
 # gate '_cz_se_nw_park <Z:qubit> q[9], <Z:qubit> q[12], <I:qubit> q[11]'
  # slot=3, instrument='flux_0', group=1': signalValue='{type:cz,which:SE}'
  # slot=3, instrument='flux_0', group=4': signalValue='{type:idle_z,which:NW}'
  # slot=3, instrument='flux_0', group=3': signalValue='{type:park}'
  # slot=3, instrument='flux_0', group=1: codeword=2 (static override): groupDigOut=0x00000010
  # slot=3, instrument='flux_0', group=3: codeword=5 (static override): groupDigOut=0x00000a00
  # slot=3, instrument='flux_0', group=4: codeword=4 (static override): groupDigOut=0x00040000
  # slot=3, instrument='flux_0': lastEndCycle=16, startCycle=16, instrMaxDurationInCycles=2
[3]             seq_out         0x80048a10,2                        # cycle 16-18: code word/mask on 'flux_0'
                
## Bundle 9: start_cycle=18:
 # gate '_cz_se_nw_park <Z:qubit> q[9], <Z:qubit> q[12], <I:qubit> q[11]'
  # slot=3, instrument='flux_0', group=1': signalValue='{type:cz,which:SE}'
  # slot=3, instrument='flux_0', group=4': signalValue='{type:idle_z,which:NW}'
  # slot=3, instrument='flux_0', group=3': signalValue='{type:park}'
  # slot=3, instrument='flux_0', group=1: codeword=2 (static override): groupDigOut=0x00000010
  # slot=3, instrument='flux_0', group=3: codeword=5 (static override): groupDigOut=0x00000a00
  # slot=3, instrument='flux_0', group=4: codeword=4 (static override): groupDigOut=0x00040000
  # slot=3, instrument='flux_0': lastEndCycle=18, startCycle=18, instrMaxDurationInCycles=2
[3]             seq_out         0x80048a10,2                        # cycle 18-20: code word/mask on 'flux_0'
                
## Bundle 10: start_cycle=20:
 # gate '_cz_se_nw <Z:qubit> q[10], <Z:qubit> q[14]'
  # slot=3, instrument='flux_0', group=2': signalValue='{type:cz,which:SE}'
  # slot=3, instrument='flux_0', group=6': signalValue='{type:idle_z,which:NW}'
 # gate '_cz_sw_ne <Z:qubit> q[12], <Z:qubit> q[15]'
  # slot=3, instrument='flux_0', group=4': signalValue='{type:cz,which:SW}'
  # slot=3, instrument='flux_0', group=7': signalValue='{type:idle_z,which:NE}'
  # slot=3, instrument='flux_0', group=2: codeword=2 (static override): groupDigOut=0x00000080
  # slot=3, instrument='flux_0', group=4: codeword=3 (static override): groupDigOut=0x00030000
  # slot=3, instrument='flux_0', group=6: codeword=4 (static override): groupDigOut=0x01000000
  # slot=3, instrument='flux_0', group=7: codeword=1 (static override): groupDigOut=0x02000000
  # slot=3, instrument='flux_0': lastEndCycle=20, startCycle=20, instrMaxDurationInCycles=2
[3]             seq_out         0x83038080,2                        # cycle 20-22: code word/mask on 'flux_0'
                
## Bundle 11: start_cycle=22:
 # gate '_cz_se_nw <Z:qubit> q[10], <Z:qubit> q[14]'
  # slot=3, instrument='flux_0', group=2': signalValue='{type:cz,which:SE}'
  # slot=3, instrument='flux_0', group=6': signalValue='{type:idle_z,which:NW}'
 # gate '_cz_sw_ne <Z:qubit> q[12], <Z:qubit> q[15]'
  # slot=3, instrument='flux_0', group=4': signalValue='{type:cz,which:SW}'
  # slot=3, instrument='flux_0', group=7': signalValue='{type:idle_z,which:NE}'
  # slot=3, instrument='flux_0', group=2: codeword=2 (static override): groupDigOut=0x00000080
  # slot=3, instrument='flux_0', group=4: codeword=3 (static override): groupDigOut=0x00030000
  # slot=3, instrument='flux_0', group=6: codeword=4 (static override): groupDigOut=0x01000000
  # slot=3, instrument='flux_0', group=7: codeword=1 (static override): groupDigOut=0x02000000
 # last bundle of kernel, will pad outputs to match durations
[2]             seq_wait        24                                  # cycle 0-24: padding on 'ro_0'
[4]             seq_wait        24                                  # cycle 0-24: padding on 'ro_1'
[5]             seq_wait        24                                  # cycle 0-24: padding on 'ro_2'
[0]             seq_wait        24                                  # cycle 0-24: padding on 'mw_0'
[1]             seq_wait        24                                  # cycle 0-24: padding on 'mw_1'
[6]             seq_wait        24                                  # cycle 0-24: padding on 'mw_2'
[7]             seq_wait        24                                  # cycle 0-24: padding on 'mw_3'
[8]             seq_wait        24                                  # cycle 0-24: padding on 'mw_4'
  # slot=3, instrument='flux_0': lastEndCycle=22, startCycle=22, instrMaxDurationInCycles=2
[3]             seq_out         0x83038080,2                        # cycle 22-24: code word/mask on 'flux_0'
[9]             seq_wait        24                                  # cycle 0-24: padding on 'flux_1'
[10]            seq_wait        24                                  # cycle 0-24: padding on 'flux_2'
                
### Block end: 'kernel_0'
# finish program
                seq_wait        1                                   
                jmp             @__mainLoop                         # loop indefinitely
.END                            
.DATAPATH                                               
## Bundle 0: start_cycle=0:
## Bundle 1: start_cycle=2:
## Bundle 2: start_cycle=4:
## Bundle 3: start_cycle=6:
## Bundle 4: start_cycle=8:
## Bundle 5: start_cycle=10:
## Bundle 6: start_cycle=12:
## Bundle 7: start_cycle=14:
## Bundle 8: start_cycle=16:
## Bundle 9: start_cycle=18:
## Bundle 10: start_cycle=20:
## Bundle 11: start_cycle=22:
.END                                                    
